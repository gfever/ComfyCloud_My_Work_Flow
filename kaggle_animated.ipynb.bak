{
 "cells": [
  {
   "metadata": {},
   "cell_type": "code",
   "outputs": [],
   "execution_count": null,
   "source": [
    "# @title üé¨ –ì–û–î–ñ–û 30 –°–ï–ö ‚Äî –° –†–ï–ê–õ–¨–ù–û–ô –ê–ù–ò–ú–ê–¶–ò–ï–ô (AnimateDiff)\n",
    "import os\n",
    "import subprocess\n",
    "import time\n",
    "from IPython.display import FileLink, display\n",
    "\n",
    "# ============================================\n",
    "# üìù –ù–ê–°–¢–†–û–ô–ö–ò - –ú–ï–ù–Ø–ô –¢–û–õ–¨–ö–û –≠–¢–û!\n",
    "# ============================================\n",
    "PROMPT = \"gojo satoru, white spiky hair, black blindfold, confident smirk, turning head slowly, wind blowing hair, anime style, highly detailed, 8k, cinematic lighting, smooth animation\"\n",
    "NEGATIVE_PROMPT = \"blurry, deformed, low quality, watermark, text, bad anatomy, static, frozen, choppy animation, jpeg artifacts\"\n",
    "\n",
    "# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏\n",
    "WIDTH = 512\n",
    "HEIGHT = 768\n",
    "NUM_FRAMES = 16  # AnimateDiff –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç 16-24 –∫–∞–¥—Ä–∞ –∑–∞ —Ä–∞–∑\n",
    "STEPS = 25  # –î–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ª—É—á—à–µ –±–æ–ª—å—à–µ steps\n",
    "CFG_SCALE = 7.5\n",
    "FPS = 8  # FPS –∏—Å—Ö–æ–¥–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏\n",
    "\n",
    "# –ò–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è RIFE (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ - –¥–ª—è —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏—è)\n",
    "USE_RIFE = True  # True = –ø—Ä–∏–º–µ–Ω–∏—Ç—å RIFE –¥–ª—è –µ—â—ë –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏\n",
    "RIFE_EXP = 4  # 4 = 16‚Üí256 –∫–∞–¥—Ä–æ–≤ (~30 —Å–µ–∫ –ø—Ä–∏ 8 fps), 3 = 16‚Üí128 (~15 —Å–µ–∫)\n",
    "# ============================================\n",
    "\n",
    "# === –ü–ê–ü–ö–ò ===\n",
    "WORKSPACE = \"/kaggle/working\"\n",
    "FRAMES_DIR = f\"{WORKSPACE}/frames\"\n",
    "DATASET_DIR = \"/kaggle/input/comfyui-models-gojo\"\n",
    "\n",
    "os.makedirs(FRAMES_DIR, exist_ok=True)\n",
    "\n",
    "print(\"=\"*60)\n",
    "print(\"üé¨ –ì–ï–ù–ï–†–ê–¶–ò–Ø –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–û–ì–û –í–ò–î–ï–û –° AnimateDiff\")\n",
    "print(\"=\"*60)\n",
    "print(f\"–ü—Ä–æ–º–ø—Ç: {PROMPT[:60]}...\")\n",
    "print(f\"–†–∞–∑–º–µ—Ä: {WIDTH}x{HEIGHT}, {NUM_FRAMES} –∫–∞–¥—Ä–æ–≤\")\n",
    "print(f\"RIFE –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è: {'–î–∞' if USE_RIFE else '–ù–µ—Ç'}\")\n",
    "print(\"=\"*60 + \"\\n\")\n",
    "\n",
    "# === –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ===\n",
    "print(\"üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...\")\n",
    "\n",
    "try:\n",
    "    import diffusers\n",
    "    print(\"‚úì diffusers\")\n",
    "except ImportError:\n",
    "    print(\"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ diffusers...\")\n",
    "    !pip install -q diffusers[torch] transformers accelerate\n",
    "\n",
    "try:\n",
    "    import cv2\n",
    "    print(\"‚úì opencv-python\")\n",
    "except ImportError:\n",
    "    print(\"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ opencv-python...\")\n",
    "    !pip install -q opencv-python\n",
    "\n",
    "# –î–ª—è AnimateDiff –Ω—É–∂–µ–Ω imageio –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∏–¥–µ–æ\n",
    "try:\n",
    "    import imageio\n",
    "    print(\"‚úì imageio\")\n",
    "except ImportError:\n",
    "    print(\"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ imageio...\")\n",
    "    !pip install -q imageio imageio-ffmpeg\n",
    "\n",
    "print(\"‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≥–æ—Ç–æ–≤—ã!\\n\")\n",
    "\n",
    "# === –ì–ï–ù–ï–†–ê–¶–ò–Ø –ê–ù–ò–ú–ê–¶–ò–ò –° AnimateDiff ===\n",
    "print(\"üé® –ó–∞–≥—Ä—É–∑–∫–∞ AnimateDiff pipeline...\")\n",
    "\n",
    "import torch\n",
    "from diffusers import AnimateDiffPipeline, MotionAdapter, EulerDiscreteScheduler\n",
    "from diffusers.utils import export_to_gif, export_to_video\n",
    "from PIL import Image\n",
    "\n",
    "# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –º–æ–¥–µ–ª—å AnimateDiff –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ\n",
    "animatediff_model = f\"{DATASET_DIR}/mm_sd_v15_v2.ckpt\"\n",
    "base_model = f\"{DATASET_DIR}/sd_xl_base_1.0.safetensors\"\n",
    "\n",
    "if os.path.exists(animatediff_model):\n",
    "    print(f\"‚úì –ù–∞–π–¥–µ–Ω–∞ AnimateDiff –º–æ–¥–µ–ª—å –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ\")\n",
    "    # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥\n",
    "    # AnimateDiff —Ä–∞–±–æ—Ç–∞–µ—Ç —Å SD 1.5, –∞ –Ω–µ SDXL\n",
    "    use_local = False\n",
    "else:\n",
    "    print(\"–ó–∞–≥—Ä—É–∑–∫–∞ AnimateDiff –∏–∑ HuggingFace...\")\n",
    "    use_local = False\n",
    "\n",
    "# AnimateDiff pipeline\n",
    "if not use_local:\n",
    "    # –ò—Å–ø–æ–ª—å–∑—É–µ–º motion adapter –∏–∑ HuggingFace\n",
    "    adapter = MotionAdapter.from_pretrained(\n",
    "        \"guoyww/animatediff-motion-adapter-v1-5-2\",\n",
    "        torch_dtype=torch.float16\n",
    "    )\n",
    "\n",
    "    # –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–∑–æ–≤—É—é SD 1.5 –º–æ–¥–µ–ª—å\n",
    "    # AnimateDiff —Ä–∞–±–æ—Ç–∞–µ—Ç –ª—É—á—à–µ —Å SD 1.5, —á–µ–º —Å SDXL\n",
    "    pipe = AnimateDiffPipeline.from_pretrained(\n",
    "        \"runwayml/stable-diffusion-v1-5\",\n",
    "        motion_adapter=adapter,\n",
    "        torch_dtype=torch.float16\n",
    "    ).to(\"cuda\")\n",
    "\n",
    "    # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è\n",
    "    pipe.scheduler = EulerDiscreteScheduler.from_config(pipe.scheduler.config)\n",
    "    pipe.enable_vae_slicing()\n",
    "    pipe.enable_model_cpu_offload()\n",
    "\n",
    "print(\"‚úì AnimateDiff pipeline –≥–æ—Ç–æ–≤!\\n\")\n",
    "\n",
    "# === –ì–ï–ù–ï–†–ê–¶–ò–Ø –ê–ù–ò–ú–ê–¶–ò–ò ===\n",
    "print(f\"üé¨ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ {NUM_FRAMES} –∫–∞–¥—Ä–æ–≤...\")\n",
    "print(f\"   –≠—Ç–æ –∑–∞–π–º–µ—Ç ~3-7 –º–∏–Ω—É—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç GPU...\\n\")\n",
    "\n",
    "start_time = time.time()\n",
    "\n",
    "# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏—é\n",
    "output = pipe(\n",
    "    prompt=PROMPT,\n",
    "    negative_prompt=NEGATIVE_PROMPT,\n",
    "    num_frames=NUM_FRAMES,\n",
    "    width=WIDTH,\n",
    "    height=HEIGHT,\n",
    "    num_inference_steps=STEPS,\n",
    "    guidance_scale=CFG_SCALE,\n",
    "    generator=torch.Generator(\"cuda\").manual_seed(42)\n",
    ")\n",
    "\n",
    "frames = output.frames[0]  # –°–ø–∏—Å–æ–∫ PIL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n",
    "gen_time = time.time() - start_time\n",
    "\n",
    "print(f\"‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞ {gen_time:.1f} —Å–µ–∫—É–Ω–¥!\")\n",
    "print(f\"   –ü–æ–ª—É—á–µ–Ω–æ {len(frames)} –∫–∞–¥—Ä–æ–≤\\n\")\n",
    "\n",
    "# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–¥—Ä—ã –¥–ª—è RIFE (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)\n",
    "if USE_RIFE:\n",
    "    print(\"üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–¥—Ä–æ–≤ –¥–ª—è RIFE –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏...\")\n",
    "    for i, frame in enumerate(frames):\n",
    "        frame.save(f\"{FRAMES_DIR}/{i}.png\")\n",
    "    print(f\"‚úì {len(frames)} –∫–∞–¥—Ä–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ\\n\")\n",
    "\n",
    "# –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ –∏–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏\n",
    "print(\"üé• –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –≤–∏–¥–µ–æ...\")\n",
    "base_video_path = f\"{WORKSPACE}/GOJO_ANIMATED_BASE.mp4\"\n",
    "export_to_video(frames, base_video_path, fps=FPS)\n",
    "\n",
    "if os.path.exists(base_video_path):\n",
    "    file_size = os.path.getsize(base_video_path) / 1024 / 1024\n",
    "    duration = len(frames) / FPS\n",
    "    print(f\"‚úÖ –ë–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ! ({duration:.1f}s, {file_size:.1f} MB)\")\n",
    "    print(f\"   –°–∫–∞—á–∞—Ç—å: \", end=\"\")\n",
    "    display(FileLink(base_video_path))\n",
    "else:\n",
    "    print(\"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –±–∞–∑–æ–≤–æ–µ –≤–∏–¥–µ–æ\")\n",
    "\n",
    "# –û—á–∏—â–∞–µ–º –ø–∞–º—è—Ç—å\n",
    "del pipe\n",
    "if 'adapter' in locals():\n",
    "    del adapter\n",
    "torch.cuda.empty_cache()\n",
    "\n",
    "# === RIFE –ò–ù–¢–ï–†–ü–û–õ–Ø–¶–ò–Ø (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û) ===\n",
    "final_video = base_video_path\n",
    "\n",
    "if USE_RIFE and os.path.exists(base_video_path):\n",
    "    print(\"\\n\" + \"=\"*60)\n",
    "    print(f\"üéûÔ∏è RIFE –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è: {len(frames)} ‚Üí {len(frames) * (2**RIFE_EXP)} –∫–∞–¥—Ä–æ–≤\")\n",
    "    print(\"=\"*60 + \"\\n\")\n",
    "\n",
    "    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Practical-RIFE\n",
    "    if not os.path.exists(f\"{WORKSPACE}/RIFE\"):\n",
    "        print(\"–ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ RIFE...\")\n",
    "        !git clone -q https://github.com/hzwer/Practical-RIFE {WORKSPACE}/RIFE\n",
    "\n",
    "    os.chdir(f\"{WORKSPACE}/RIFE\")\n",
    "\n",
    "    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ RIFE\n",
    "    try:\n",
    "        import skvideo\n",
    "        print(\"‚úì scikit-video\")\n",
    "    except ImportError:\n",
    "        !pip install -q scikit-video\n",
    "\n",
    "    # –°–∫–∞—á–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å RIFE\n",
    "    print(\"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ RIFE v4.26...\")\n",
    "\n",
    "    if not os.path.exists(\"train_log/flownet.pkl\"):\n",
    "        !pip install -q gdown\n",
    "        !mkdir -p train_log\n",
    "        !gdown -q 1gViYvvQrtETBgU1w8axZSsr7YUuw31uy -O train_log.zip\n",
    "\n",
    "        if os.path.exists(\"train_log.zip\") and os.path.getsize(\"train_log.zip\") > 1000000:\n",
    "            !unzip -q train_log.zip\n",
    "\n",
    "            # –ò—â–µ–º –º–æ–¥–µ–ª—å\n",
    "            if not os.path.exists(\"train_log/flownet.pkl\"):\n",
    "                result = !find . -name \"flownet.pkl\" 2>/dev/null | head -1\n",
    "                if result:\n",
    "                    !cp {result[0]} train_log/flownet.pkl\n",
    "\n",
    "    model_downloaded = os.path.exists(\"train_log/flownet.pkl\")\n",
    "\n",
    "    if model_downloaded:\n",
    "        print(\"‚úì –ú–æ–¥–µ–ª—å RIFE –≥–æ—Ç–æ–≤–∞!\\n\")\n",
    "        print(f\"–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏ (exp={RIFE_EXP})...\")\n",
    "        print(\"–≠—Ç–æ –∑–∞–π–º–µ—Ç 5-15 –º–∏–Ω—É—Ç...\\n\")\n",
    "\n",
    "        rife_start = time.time()\n",
    "\n",
    "        # –ó–∞–ø—É—Å–∫–∞–µ–º RIFE\n",
    "        !python inference_video.py \\\n",
    "            --img {FRAMES_DIR} \\\n",
    "            --exp {RIFE_EXP} \\\n",
    "            --output {WORKSPACE}/GOJO_ANIMATED_RIFE.mp4 \\\n",
    "            --UHD \\\n",
    "            2>/dev/null\n",
    "\n",
    "        rife_time = time.time() - rife_start\n",
    "\n",
    "        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n",
    "        rife_video = f\"{WORKSPACE}/GOJO_ANIMATED_RIFE.mp4\"\n",
    "        if os.path.exists(rife_video):\n",
    "            file_size = os.path.getsize(rife_video) / 1024 / 1024\n",
    "            final_frames = len(frames) * (2**RIFE_EXP)\n",
    "            duration = final_frames / (FPS * (2**RIFE_EXP))\n",
    "\n",
    "            print(f\"\\n‚úÖ RIFE –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ {rife_time:.1f}s!\")\n",
    "            print(f\"   {len(frames)} ‚Üí {final_frames} –∫–∞–¥—Ä–æ–≤\")\n",
    "            print(f\"   –†–∞–∑–º–µ—Ä: {file_size:.1f} MB\")\n",
    "            final_video = rife_video\n",
    "        else:\n",
    "            print(\"\\n‚ö†Ô∏è RIFE –Ω–µ —Å–æ–∑–¥–∞–ª –≤–∏–¥–µ–æ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é\")\n",
    "    else:\n",
    "        print(\"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –º–æ–¥–µ–ª—å RIFE\")\n",
    "        print(\"–ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é –±–µ–∑ –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏\")\n",
    "\n",
    "# === –†–ï–ó–£–õ–¨–¢–ê–¢ ===\n",
    "print(\"\\n\" + \"=\"*60)\n",
    "print(\"üéâ –ì–û–¢–û–í–û!\")\n",
    "print(\"=\"*60)\n",
    "print(f\"üìã –ò—Ç–æ–≥–∏:\")\n",
    "print(f\"   –ü—Ä–æ–º–ø—Ç: {PROMPT[:50]}...\")\n",
    "print(f\"   –†–∞–∑–º–µ—Ä: {WIDTH}x{HEIGHT}\")\n",
    "print(f\"   –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {gen_time:.1f}s\")\n",
    "\n",
    "if USE_RIFE and 'rife_time' in locals():\n",
    "    print(f\"   –í—Ä–µ–º—è RIFE: {rife_time:.1f}s\")\n",
    "    print(f\"   –û–±—â–µ–µ –≤—Ä–µ–º—è: {gen_time + rife_time:.1f}s\")\n",
    "\n",
    "print(f\"\\nüì• –§–ò–ù–ê–õ–¨–ù–û–ï –í–ò–î–ï–û:\")\n",
    "display(FileLink(final_video))\n",
    "\n",
    "if os.path.exists(base_video_path) and final_video != base_video_path:\n",
    "    print(f\"\\nüì• –ë–∞–∑–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è (–±–µ–∑ RIFE):\")\n",
    "    display(FileLink(base_video_path))\n",
    "\n",
    "print(\"\\n\" + \"=\"*60)\n",
    "print(\"üí° –°–û–í–ï–¢–´:\")\n",
    "print(\"   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –≤ –ø—Ä–æ–º–ø—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è:\")\n",
    "print(\"     'turning head', 'blinking', 'hair flowing', 'camera zoom'\")\n",
    "print(\"   ‚Ä¢ –î–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ —É–≤–µ–ª–∏—á—å—Ç–µ NUM_FRAMES –¥–æ 24\")\n",
    "print(\"   ‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'smooth motion' –≤ –ø—Ä–æ–º–ø—Ç–µ\")\n",
    "print(\"   ‚Ä¢ Negative –ø—Ä–æ–º–ø—Ç: 'static, frozen, choppy'\")\n",
    "print(\"=\"*60)\n"
   ],
   "id": "9e53d4e531753607"
  }
 ],
 "metadata": {},
 "nbformat": 5,
 "nbformat_minor": 9
}
